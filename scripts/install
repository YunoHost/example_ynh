#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# This is a multi-instance app, meaning it can be installed several times independently
# The id of the app as stated in the manifest is available as $YNH_APP_ID
# The instance number is available as $YNH_APP_INSTANCE_NUMBER (equals "1", "2", ...)
# The app instance name is available as $YNH_APP_INSTANCE_NAME
#    - the first time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample
#    - the second time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample__2
#    - ynhexample__{N} for the subsequent installations, with N=3,4, ...
# The app instance name is probably what you are interested the most, since this is
# guaranteed to be unique. This is a good unique identifier to define installation path,
# db names, ...
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE

# Source YunoHost helpers
source /usr/share/yunohost/helpers

#Â Save app settings
ynh_app_setting_set "$app" admin "$admin"
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" language "$language"

# Normalize the url path syntax
if [ "${path_url:0:1}" != "/" ]; then    # If the first character is not a /
	path_url="/$path_url"    # Add / at begin of path variable
fi
if [ "${path_url:${#path_url}-1}" == "/" ] && [ ${#path_url} -gt 1 ]; then    # If the last character is a / and that not the only character.
	path_url="${path_url:0:${#path_url}-1}"	# Delete the last character
fi

# Check domain/path availability
sudo yunohost app checkurl "${domain}${path_url}" -a "$app" \
    || ynh_die "Path not available: ${domain}${path_url}"

# Obtain and extract source files
src_url=$(cat ../conf/app.src | grep SOURCE_URL | cut -d= -f2)
src_checksum=$(cat ../conf/app.src | grep SOURCE_SUM | cut -d= -f2)
src_path=/var/www/$app

# Download sources from the upstream
wget -nv -O source.tar.gz $src_url

# Replace md5sum by sha1sum, sha256sum or whatever you use
echo "$src_checksum source.tar.gz" | md5sum -c --status \
|| ynh_die "Corrupt source"

# Extract source into the app dir
sudo mkdir $src_path || ynh_die "This path already contains a folder"
sudo tar -x -f source.tar.gz -C $src_path --strip-components 1

# Set permissions to app files
# you may need to make some file and/or directory writeable by www-data (nginx user)
sudo chown -R root: $src_path

### MySQL (can be removed if not used) ###
# If your app use a MySQL database you can use these lines to bootstrap
# a database, an associated user and save the password in app settings.
#
# # Generate MySQL password and create database
# dbuser=$app
# dbname=$app
# dbpass=$(ynh_string_random 12)
# ynh_app_setting_set "$app" mysqlpwd "$dbpass"
# ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"
#
# # Load initial SQL into the new database
# ynh_mysql_connect_as "$dbuser" "$dbpass" "$dbname" \
#     < "../sources/sql/mysql.init.sql"
### MySQL end ###

# Modify Nginx configuration file and copy it to Nginx conf directory
nginx_conf=../conf/nginx.conf
sed -i "s@YNH_WWW_PATH@$path_url@g" $nginx_conf
sed -i "s@YNH_WWW_ALIAS@$src_path/@g" $nginx_conf
sed -i "s@YNH_WWW_APP@$app@g" $nginx_conf

sudo cp $nginx_conf /etc/nginx/conf.d/$domain.d/$app.conf

### PHP (can be removed if not used) ###
# Modify PHP-FPM pool configuration and copy it to the pool directory
sed -i "s@YNH_WWW_APP@$app@g" ../conf/php-fpm.conf
sed -i "s@YNH_WWW_ALIAS@$src_path/@g" ../conf/php-fpm.conf
finalphpconf=/etc/php5/fpm/pool.d/$app.conf
sudo cp ../conf/php-fpm.conf $finalphpconf
sudo chown root: $finalphpconf
sudo chmod 644 $finalphpconf
sudo service php5-fpm reload
### PHP end ###

# If app is public, add url to SSOWat conf as skipped_uris
if [[ $is_public -eq 1 ]]; then
  # unprotected_uris allows SSO credentials to be passed anyway.
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

# Reload services
sudo service nginx reload
